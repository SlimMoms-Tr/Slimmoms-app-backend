{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "SlimMoms API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for SlimMoms: daily calorie tracking, food diary, and authentication.\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://slimmoms-app-backend.onrender.com/"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication operations"
    },
    {
      "name": "Calorie",
      "description": "Calorie calculation endpoints"
    },
    {
      "name": "Daily",
      "description": "Daily user activity and food tracking"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "operationId": "registerUser",
        "description": "User registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "User login to the system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "User logout from the system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User logged out successfully (no content)"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user token",
        "operationId": "refreshToken",
        "description": "Refresh user token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/calorie/private-calories": {
      "post": {
        "tags": [
          "Calorie"
        ],
        "summary": "Post private calorie data",
        "operationId": "postPrivateCalories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/calorie"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/calorie/public-calories": {
      "post": {
        "tags": [
          "Calorie"
        ],
        "summary": "Post public calorie info",
        "operationId": "postPublicCalories",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/calorie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/daily/add-product": {
      "patch": {
        "tags": [
          "Daily"
        ],
        "summary": "Add product to daily calories",
        "operationId": "addProductToDaily",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addProduct"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/daily/delete-product": {
      "patch": {
        "tags": [
          "Daily"
        ],
        "summary": "Delete product from daily calories",
        "operationId": "deleteProductFromDaily",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/daily": {
      "get": {
        "tags": [
          "Daily"
        ],
        "summary": "Get daily calorie summary",
        "operationId": "getDaily",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date for which the daily report is requested (YYYY-MM-DD)",
            "example": "2025-07-28"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "register": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30,
            "description": "Full name of the user",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address used for registration",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the new account",
            "example": "password123"
          }
        }
      },
      "login": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's registered email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's account password",
            "example": "password123"
          }
        }
      },
      "calorie": {
        "type": "object",
        "required": [
          "weight",
          "height",
          "age",
          "gender",
          "targetWeight",
          "bloodType"
        ],
        "properties": {
          "weight": {
            "type": "number",
            "description": "Current body weight in kilograms",
            "example": 70
          },
          "height": {
            "type": "number",
            "description": "Height in centimeters",
            "example": 175
          },
          "age": {
            "type": "number",
            "description": "Age in years",
            "example": 30
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female",
              "other"
            ],
            "description": "Gender of the user",
            "example": "female"
          },
          "targetWeight": {
            "type": "number",
            "description": "Target body weight in kilograms",
            "example": 65
          },
          "bloodType": {
            "type": "number",
            "enum": [
              1,
              2,
              3,
              4
            ],
            "description": "Blood type (1 = A, 2 = B, 3 = AB, 4 = O)",
            "example": 2
          }
        }
      },
      "addProduct": {
        "type": "object",
        "required": [
          "date",
          "productId",
          "weight"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date the product was consumed (YYYY-MM-DD)",
            "example": "2025-07-28"
          },
          "productId": {
            "type": "string",
            "description": "ID of the consumed product",
            "example": "5d51694802b2373622ff5543"
          },
          "weight": {
            "type": "number",
            "minimum": 1,
            "maximum": 10000,
            "description": "Amount of product consumed in grams",
            "example": 150
          }
        }
      },
      "deleteProduct": {
        "type": "object",
        "required": [
          "date",
          "productId"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of the product entry to be deleted (YYYY-MM-DD)",
            "example": "2025-07-28"
          },
          "productId": {
            "type": "string",
            "description": "Unique ID of the consumed product to delete",
            "example": "64d2ab48f4b7be001a8c14b2"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successful operation"
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "Created successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully registered user!"
                },
                "data": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid request. Please check your input."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Failed to process request due to an internal server error."
                }
              }
            }
          }
        }
      }
    }
  }
}
